@model TaskManager.Task.Entities.TaskDetailEntity

@{
    Layout = null;
    AjaxOptions option = new AjaxOptions { HttpMethod = "Post", OnSuccess = "doResult" };
}


@using (Ajax.BeginForm(option))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-xs-12 col-md-12">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.IsRunning)
        @Html.HiddenFor(model => model.LastEnd)
        @Html.HiddenFor(model => model.LastIsSuccess)
        @Html.HiddenFor(model => model.LastStart)
        @Html.HiddenFor(model => model.NextStart)
        @Html.HiddenFor(model => model.RunAtRestart)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, "任务名称", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassType, "任务函数类", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ClassType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClassType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, "开始时间", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control form_datetime" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, "到期时间", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control form_datetime" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskRule, "Cron式子", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.TaskRule, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaskRule, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Enabled, "启用", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Enabled)
                    @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value="保存" class="btn btn-default"/>
                <a class="btn btn-default" onclick="cancellayer()">取消</a>
                <a class="btn btn-default" onclick="GetCronResult()">测试Cron</a>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12" id="runTime">
                
            </div>
        </div>
    </div>
}

<script>
    function doResult(data) {
        layer.alert(data.msg);
        if (data.st == 1) {
            layer.closeAll('page');
        }
    }

    function GetCronResult() {
        var cronstr = $("input[name='TaskRule']").val();
        $.myGet("@(Url.Action("GetTaskeFireTime","Task"))", { cronExpression: cronstr },function(data) {
            if (data && data.length == 5) {
                var strHTML = "最近5次运行时间:<hr/><ul>";
                for (var i = 0; i < data.length; i++) {
                    strHTML += "<li>" + data[i] + "</li>";
                }
                strHTML += "</ul>"
                $("#runTime").html(strHTML);
            } else {
                $("#runTime").html("");
            }
        });
    }

    function cancellayer() {
        layer.closeAll('page');
    }
    $(".form_datetime").datetimepicker({
        format: "yyyy/m/d h:i:ss"
    });
</script>